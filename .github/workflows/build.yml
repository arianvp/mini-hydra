on:
  pull_request:
  push:
    branches:
      - "main"
jobs:
  nix-eval-jobs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.nix-eval-jobs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            accept-flake-config = true
      - uses: cachix/cachix-action@v12
        with:
          name: nixpkgs-maintained
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - id: nix-eval-jobs
        name: nix-eval-jobs
        shell: bash
        run: |
          jobs=$(nix run github:nix-community/nix-eval-jobs -- --workers 2 --force-recurse --check-cache-status --flake .#hydraJobs)
          while read -r line; do
            isCached=$(echo "$line" | nix run nixpkgs#jq -- -r '.isCached')
            drvPath=$(echo "$line" | nix run nixpkgs#jq -- -r '.drvPath')
            if [[ "$isCached" == "false" ]]; then
              cachix push nixpkgs-maintained "$drvPath"
            fi
          done <<< "$jobs"
          matrix=$(echo $jobs | nix run nixpkgs#jq -- -c -s '[.[]|select(.isCached == false)]')
          echo matrix="$matrix" >> $GITHUB_OUTPUT
  nix-build:
    needs: nix-eval-jobs
    if: ${{ needs.nix-eval-jobs.outputs.matrix != '[]' }}
    strategy:
      matrix:
        package: ${{ fromJSON(needs.nix-eval-jobs.outputs.matrix) }}
    runs-on: ubuntu-latest 
    steps:
      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            accept-flake-config = true
      - uses: cachix/cachix-action@v12
        with:
          name: nixpkgs-maintained
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: nix build .#hydraJobs.${{ matrix.package.attr }} --system ${{ matrix.package.system }}}
        run: nix build ${{ matrix.package.drvPath }}
        if: ${{ matrix.package.isCached == false }}
